# IO Matrix Interactive Dashboard
# This script creates an interactive HTML dashboard for visualizing input-output matrices
# Load required libraries
library(data.table)
library(plotly)
library(flexdashboard)
library(dplyr)
library(tidyr)
library(RColorBrewer)
# Set working directory
setwd(file.path(
"~", "Dropbox-HarvardUniversity", "Martin Bernstein",
"Fall 2025", "Other", "LCC"
))
# Load the IO data
io <- fread(file.path("data", "constructed data",
"IO-matrices", "IO_matrices_long.csv"))
io
y <- 1963
io[year == y]
dt <- io[year == y]
dt
ggplot(dt, aes(industry, commodity, color = share_in_output)) +
geom_point()
io
dt
NNA_codes <- fread(file.path("data", "codes and crosswalks",
"NNA_codes_crosswalks.csv"))
NNA_codes
NNA_codes <- unique(NNA_codes[, .(NNA_code, NNA_industry)]
)
NNA_codes
io[, industry := factor(industry, levels = NNA_codes$NNA_industry)]
io
io[, commodity := factor(commodity, levels = NNA_codes$NNA_industry)]
y <- 1963
dt <- io[year == y]
ggplot(dt, aes(industry, commodity, color = share_in_output)) +
geom_point()
NNA_codes
NNA_backwards <- NNA_codes[nrow(NNA_codes):1, ]
NNA_backwards
setwd(file.path(
"~", "Dropbox-HarvardUniversity", "Martin Bernstein",
"Fall 2025", "Other", "LCC"
))
# Load the IO data
io <- fread(file.path("data", "constructed data",
"IO-matrices", "IO_matrices_long.csv"))
NNA_codes <- fread(file.path("data", "codes and crosswalks",
"NNA_codes_crosswalks.csv"))
NNA_codes <- unique(NNA_codes[, .(NNA_code, NNA_industry)])
io[, industry := factor(industry, levels = NNA_codes$NNA_industry)]
NNA_backwards <- NNA_codes[nrow(NNA_codes):1, ]
io[, commodity := factor(commodity, levels = NNA_backwards$NNA_industry)]
y <- 1963
dt <- io[year == y]
ggplot(dt, aes(industry, commodity, color = share_in_output)) +
geom_point()
ggplot(dt, aes(industry, commodity, color = log(share_in_output))) +
geom_point()
ggplot(dt, aes(industry, commodity, color = share_in_output)) +
geom_point()
ggplot(dt[share_in_output > 0],
aes(industry, commodity, color = share_in_output)) +
geom_point()
ggplot(dt, aes(industry, commodity, color = share_in_output)) +
geom_point()
